<jittershader name="normal4way">
	<description>
	Normal (opacity) composite operator
	</description>
	<param name="amount0" type="vec4" default="1. 1. 1. 1.">
		<description>Layer 0 Blend amount</description>
	</param>
	<param name="amount1" type="vec4" default="1. 1. 1. 1.">
		<description>Layer 1 Blend amount</description>
	</param>
	<param name="amount2" type="vec4" default="1. 1. 1. 1.">
		<description>Layer 2 Blend amount</description>
	</param>
	<param name="amount3" type="vec4" default="1. 1. 1. 1.">
		<description>Layer 3 Blend amount</description>
	</param>
	<param name="tex0" type="int" default="0" />
	<param name="tex1" type="int" default="1" />
	<param name="tex2" type="int" default="2" />
	<param name="tex3" type="int" default="3" />
	<language name="glsl" version="1.0">
	<bind param="amount0" program="fp" />
	<bind param="amount1" program="fp" />
	<bind param="amount2" program="fp" />
	<bind param="amount3" program="fp" />
	<bind param="tex0" program="fp" />
	<bind param="tex1" program="fp" />		
	<bind param="tex2" program="fp" />
	<bind param="tex3" program="fp" />		
		<program name="vp" type="vertex" source="sh.passthru.xform.vp.glsl" />
		<program name="fp" type="fragment">
<![CDATA[

// texcoords
varying vec2 texcoord0;
varying vec2 texcoord1;
varying vec2 texcoord2;
varying vec2 texcoord3;

// samplers
uniform sampler2DRect tex0;
uniform sampler2DRect tex1;
uniform sampler2DRect tex2;
uniform sampler2DRect tex3;

// blend amounts
uniform vec4 amount0;
uniform vec4 amount1;
uniform vec4 amount2;
uniform vec4 amount3;

// entry point
void main()
{   
	vec4 one = vec4(1.0);
	vec4 two = vec4(2.0);

	vec4 a = texture2DRect(tex0, texcoord0);
	vec4 b = texture2DRect(tex1, texcoord1);
	vec4 c = texture2DRect(tex2, texcoord2);
	vec4 d = texture2DRect(tex3, texcoord3);

	gl_FragColor = mix(a,(mix(b,(mix(c,(d*(1.0-amount3)),amount2)),amount1)),amount0);
}

]]>
		</program>
	</language>
</jittershader>

