<jittershader name="threshold">
	<description>Shader filter the video noise of median method</description>
	<param name="ModelViewProj" type="float4x4" state="MODELVIEW_PROJECTION_MATRIX" transform="IDENTITY"/> 
	<param name="size" type="float2" default="640.0 480.0" />
	<param name="threshold" type="float" default="0.5" />
	<param name="bypass" type="float" default="0.0" />
	<param name="inverse" type="float" default="0.0" />
	
	<param name="image" type="int" state="TEXUNIT0" default ="0" />

	<language name="cg" version="1.0">
		<bind param="ModelViewProj" program="vp" />
		<bind param="size" program="fp" />
		<bind param="image" program="fp" />
		<bind param="bypass" program="fp" />
		<bind param="threshold" program="fp" />
		<bind param="inverse" program="fp" />


		<program name="vp" type="vertex"  entry="main" source="tllslo-vp.cg">
		</program>
		<program name="fp" type="fragment" entry="main">
<![CDATA[
//
// Fragment shader 
// Author: wai kit chan
//cg

void main(

	in float4 decalCoords      : TEXCOORD0,//ssmap coor
	//uniform samplerRECT  MaVideo   : TEXUNIT0,     // echo FB capture
	uniform float bypass,
	uniform samplerRECT image,
	uniform float2 size,
	uniform float invert,
	uniform float threshold,
	uniform float inverse,
	
	out float4 color		: COLOR
    )
{
	//at first decalCoords is between 0 and 1, after the multiplication it's between 0 and video size
	//decalCoords.y=1-decalCoords.y;
	float2 CoordsTmp=decalCoords.xy* size;
	float4 color1 = float4(1.0,1.0,1.0,1.0);
	float4 color2 = float4(0.0,0.0,0.0,1.0);
	if (bypass == 1.0)
	{
		//return the pixel value without processing
		color = texRECT(image,CoordsTmp).rgba ;//* 0.5  + 0.5 * float4(0.0, 0.5, 1.0 , 1.0);
	}else{
		float4 texIn = texRECT(image,CoordsTmp).rgba ;
		
		if (texIn.r > (threshold))
		{
			if (inverse == 0.0)color = float4(color1.rgb,texIn.a);
			else color = float4(color2.rgb,texIn.a);
			
		}else{
			if (inverse == 0.0)color = float4(color2.rgb,texIn.a);
			else color = float4(color1.rgb,texIn.a);
		}
	}
}
]]>		
		</program>		
	</language>
</jittershader>
