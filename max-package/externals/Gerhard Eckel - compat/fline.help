max v2;#N vpatcher 21 50 460 370;#P window setfont "Sans Serif" 9.;#P flonum 110 162 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P window linecount 10;#P comment 4 180 404 196617 Fline produces breakpoint line segments. It takes two arguments. The first is an initial target value or origin point. The second is a time grain in milliseconds (by default this value is 20). The left inlet takes a float specifying a destination value. The middle inlet takes a int specifying a time in milliseconds to reach the destination. When a float is received in the left inlet \, fline begins outputing float values from the initial value to the destination in the time specified. The number of values (or frequency of values output) is determined by the time grain which can be changed via the right inlet. If a new float is sent in the left inlet while the line is running \, the current output value automatically becomes the new origin value (to avoid discontinuity when chaining line segments). Note: if a new time is not given with a new origin the ramp time is considered to be zero.;#P window linecount 4;#P comment 298 20 106 196617 Arguments: 2 ints \, (optional) \; Inlets: float \, int \, int \; Outlet: float;#P window setfont "Sans Serif" 14.;#P window linecount 1;#P comment 9 12 41 196622 fline;#P window setfont "Sans Serif" 9.;#P window linecount 2;#P comment 8 34 167 196617 Generate ramps and line segments with floating point numbers!!;#P window linecount 1;#P message 121 113 44 196617 1. 1000;#P message 110 93 44 196617 0. 1000;#P newex 110 140 90 196617 fline 1 20;#P window linecount 3;#P comment 228 114 77 196617 int in right inlet sets grain in milliseconds;#P window linecount 2;#P comment 112 65 174 196617 an int in middle followed by a float in left starts a ramp \, just like line.;#P window linecount 1;#P message 74 99 29 196617 3.14;#P message 74 120 14 196617 1;#P window linecount 5;#P comment 9 98 63 196617 int at left without one in middle makes it jump.;#P number 190 121 33 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P button 190 159 15 0;#P window linecount 1;#P comment 208 160 100 196617 signal outlet for end;#P comment 51 15 138 196617 Gerhard Eckel \, IRCAM \, 1994;#P window linecount 3;#P comment 316 102 100 196617 this help patch was shamelessly copied from line.help;#P fasten 6 0 10 0 79 137 115 137;#P fasten 7 0 10 0 79 117 115 117;#P connect 11 0 10 0;#P connect 12 0 10 0;#P connect 10 0 17 0;#P connect 4 0 10 2;#P connect 10 1 3 0;#P pop;