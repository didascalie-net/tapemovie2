<jittershader name="median">
	<description>Shader filter the video noise of median method</description>
	<param name="ModelViewProj" type="float4x4" state="MODELVIEW_PROJECTION_MATRIX" transform="IDENTITY"/> 
	<param name="size" type="float2" default="640.0 480.0" />
	<param name="bypass" type="float" default="0.0" />
	<param name="image" type="int" state="TEXUNIT0" default ="0" />

	<language name="cg" version="1.0">
		<bind param="ModelViewProj" program="vp" />
		<bind param="size" program="fp" />
		<bind param="image" program="fp" />
		<bind param="bypass" program="fp" />
		<program name="vp" type="vertex"  entry="main" source="tllslo-vp.cg">
		</program>
		<program name="fp" type="fragment" entry="main">
<![CDATA[
//
// Fragment shader 
// Author: wai kit chan
//cg
static const int dim = 3;// = 5 : 8FPS ; = 3 : 21FPS ; >=6 bug
static const int d1 = dim*dim;
static const int d2 = dim*dim-1;
static const float d3 = (dim*dim)/2;//9
static float data[dim*dim]; 
static const float2 dir[9] = { {0,0},{1,1}, {1,-1}, {-1,-1}, {-1,1} ,{2,2}, {2,-2}, {-2,-2}, {-2,2}};
void bubblesort()
{
   float minor, major;
   for( int i=0; i<d1; ++i) {
      for( int j=0; j<d2; ++j) {
         minor = min( data[j], data[j+1] );
         major = max( data[j], data[j+1]);
         data[j]   = minor;
         data[j+1] = major;
      }
   }
}

void main(

	in float4 decalCoords      : TEXCOORD0,//ssmap coor
	//uniform samplerRECT  MaVideo   : TEXUNIT0,     // echo FB capture
	uniform float bypass,
	uniform samplerRECT image,
	uniform float2 size,
	
	out float4 color		: COLOR
    )
{
	//at first decalCoords is between 0 and 1, after the multiplication it's between 0 and video size
	float2 CoordsTmp=decalCoords.xy* size;
	
	if (bypass == 1.0)
	{
		//return the pixel value without processing
		color = texRECT(image,CoordsTmp).rgba ;//* 0.5  + 0.5 * float4(0.0, 0.5, 1.0 , 1.0);
	}else{
		//contraste madian
		//trier les 9 valeurs
		float grayMedian;
		float4 colorMedian; 
		for( int i=0; i<d1; ++i) {
			colorMedian = texRECT( image,CoordsTmp.xy+dir[i] );
			grayMedian = colorMedian.r*0.3+colorMedian.g*0.59+colorMedian.b*0.11;
			data[i] = grayMedian;	
		}
		bubblesort();
		//return median value
		color = float4( float3(data[d3]), 1.0); 
	}
}
]]>		
		</program>		
	</language>
</jittershader>
